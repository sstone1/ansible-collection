..
.. SPDX-License-Identifier: Apache-2.0
..

:github_url: https://github.com/IBM-Blockchain/ansible-collection/edit/master/plugins/modules/organization_info.py


organization_info -- Get information about a Hyperledger Fabric organization
============================================================================

.. contents::
   :local:
   :depth: 1


Synopsis
--------

Get information about a Hyperledger Fabric organization by using the IBM Blockchain Platform.

A Hyperledger Fabric organziation is also known as a Membership Services Provider (MSP).

This module works with the IBM Blockchain Platform managed service running in IBM Cloud, or the IBM Blockchain Platform software running in a Red Hat OpenShift or Kubernetes cluster.






Parameters
----------

  api_endpoint (optional, str, None)
    The URL for the IBM Blockchain Platform console.


  api_authtype (optional, str, None)
    ``ibmcloud`` - Authenticate to the IBM Blockchain Platform console using IBM Cloud authentication. You must provide a valid API key using *api_key*.

    ``basic`` - Authenticate to the IBM Blockchain Platform console using basic authentication. You must provide both a valid API key using *api_key* and API secret using *api_secret*.


  api_key (optional, str, None)
    The API key for the IBM Blockchain Platform console.


  api_secret (optional, str, None)
    The API secret for the IBM Blockchain Platform console.

    Only required when *api_authtype* is ``basic``.


  api_timeout (optional, integer, 60)
    The timeout, in seconds, to use when interacting with the IBM Blockchain Platform console.


  api_token_endpoint (optional, str, https://iam.cloud.ibm.com/identity/token)
    The IBM Cloud IAM token endpoint to use when using IBM Cloud authentication.

    Only required when *api_authtype* is ``ibmcloud``, and you are using IBM internal staging servers for testing.


  name (optional, any, None)
    The name of the organization.









Examples
--------

.. code-block:: yaml+jinja

    



Return Values
-------------

  exists (, boolean, )
    True if the organization exists, false otherwise.


  organization (, dict, )
    The organization.


    name (, str, )
      The name of the organization.


    msp_id (, str, )
      The MSP ID for the organization.


    root_certs (, list, )
      The list of root certificates for this organization.

      Root certificates must be supplied as base64 encoded PEM files.


    intermediate_certs (, list, )
      The list of intermediate certificates for this organization.

      Intermediate certificates must be supplied as base64 encoded PEM files.


    admins (, list, )
      The list of administrator certificates for this organization.

      Administrator certificates must be supplied as base64 encoded PEM files.


    revocation_list (, list, )
      The list of revoked certificates for this organization.

      Revoked certificates must be supplied as base64 encoded PEM files.


    tls_root_certs (, list, )
      The list of TLS root certificates for this organization.

      TLS root certificates must be supplied as base64 encoded PEM files.


    tls_intermediate_certs (, list, )
      The list of TLS root certificates for this organization.

      TLS intermediate certificates must be supplied as base64 encoded PEM files.


    fabric_node_ous (, dict, )
      Configuration specific to the identity classification.


      enable (, boolean, )
        True if identity classification is enabled for this organization, false otherwise.


      admin_ou_identifier (, dict, )
        Configuration specific to the admin identity classification.


        certificate (, str, )
          The root or intermediate certificate for this identity classification.

          Root or intermediate certificates must be supplied as base64 encoded PEM files.


        organizational_unit_identifier (, str, )
          The organizational unit (OU) identifier for this identity classification.



      client_ou_identifier (, dict, )
        Configuration specific to the client identity classification.


        certificate (, str, )
          The root or intermediate certificate for this identity classification.

          Root or intermediate certificates must be supplied as base64 encoded PEM files.


        organizational_unit_identifier (, str, )
          The organizational unit (OU) identifier for this identity classification.



      peer_ou_identifier (, dict, )
        Configuration specific to the peer identity classification.


        certificate (, str, )
          The root or intermediate certificate for this identity classification.

          Root or intermediate certificates must be supplied as base64 encoded PEM files.


        organizational_unit_identifier (, str, )
          The organizational unit (OU) identifier for this identity classification.



      orderer_ou_identifier (, dict, )
        Configuration specific to the orderer identity classification.


        certificate (, str, )
          The root or intermediate certificate for this identity classification.

          Root or intermediate certificates must be supplied as base64 encoded PEM files.


        organizational_unit_identifier (, str, )
          The organizational unit (OU) identifier for this identity classification.








Status
------




- This  is not guaranteed to have a backwards compatible interface. *[preview]*


- This  is maintained by community.



Authors
~~~~~~~

- Simon Stone (@sstone1)

